name: Continuous integration
on: [push, pull_request]

env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: master

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: üêß Linux (GCC)
            os: ubuntu-20.04
            platform: linux
            artifact-name: godot-cpp-space-linux-glibc2.27-x86_64-release
            artifact-path: space/bin/libspace.linux.template_release.x86_64.so
            artifact-name-debug: godot-cpp-space-linux-glibc2.27-x86_64-debug
            artifact-path-debug: space/bin/libspace.linux.template_debug.x86_64.so
            cache-name: linux-x86_64
            
          - name: üèÅ Windows (x86_64, MSVC)
            os: windows-2019
            platform: windows
            artifact-name: godot-cpp-space-windows-msvc2019-x86_64-release
            artifact-path: space/bin/libspace.windows.template_release.x86_64.dll
            artifact-name-debug: godot-cpp-space-windows-msvc2019-x86_64-debug
            artifact-path-debug: space/bin/libspace.windows.template_debug.x86_64.dll
            cache-name: windows-x86_64-msvc

          - name: üçé macOS (universal)
            os: macos-11
            platform: macos
            artifact-name: godot-cpp-space-macos-universal-release
            artifact-path: space/bin/libspace.macos.template_release.framework
            artifact-name-debug: godot-cpp-space-macos-universal-debug
            artifact-path-debug: space/bin/libspace.macos.template_debug.framework
            flags: arch=universal
            run-tests: false
            cache-name: macos-universal

    env:
      SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Set up Python (for SCons)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config

      - name: Install scons
        run: |
          python -m pip install scons==4.0.0

      - name: Setup MinGW for Windows/MinGW build
        if: ${{ matrix.platform == 'windows' && matrix.flags == 'use_mingw=yes' }}
        uses: egor-tensin/setup-mingw@v2

      - name: Generate godot-cpp sources only
        run: |
          scons platform=${{ matrix.platform }} build_library=no ${{ matrix.flags }}
          scons -c

      - name: Build godot-cpp (debug)
        run: |
          scons platform=${{ matrix.platform }} target=template_debug ${{ matrix.flags }}

      - name: Build space without rebuilding godot-cpp (debug)
        run: |
          cd space
          scons platform=${{ matrix.platform }} target=template_debug ${{ matrix.flags }} build_library=no

      - name: Build space and godot-cpp (release)
        run: |
          cd space
          scons platform=${{ matrix.platform }} target=template_release ${{ matrix.flags }}
      
      - name: Upload artifact (debug)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name-debug }}
          path: ${{ matrix.artifact-path-debug }}
          if-no-files-found: error

      - name: Upload artifact (release)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
          if-no-files-found: error
  pack:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      
      - name: Pack artifacts
        run: |
          ls -alh
          mkdir libspace.macos.template_debug.framework
          mv godot-cpp-space-macos-universal-debug/libspace.macos.template_debug libspace.macos.template_debug.framework
          mkdir libspace.macos.template_release.framework
          mv godot-cpp-space-macos-universal-release/libspace.macos.template_release libspace.macos.template_release.framework
          zip -rj space-bin.zip . -i *dll *lib *so
          zip -r space-bin.zip libspace.macos*
        
      - name: Upload packed artifacts
        uses: actions/upload-artifact@v3
        with:
          name: space-bin.zip
          path: space-bin.zip
          if-no-files-found: error
